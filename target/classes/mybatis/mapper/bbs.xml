<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbs">
	<resultMap type="mybatis.vo.BbsVO" id="map1">
		<id property="b_idx" column="b_idx"/>
		<collection property="c_list" ofType="mybatis.vo.CommVO" select="commList" column="b_idx"/>
	</resultMap>

	<!-- 특정 게시물의 기본키인 b_idx를 받아서 해당 게시물의 댓글들을 모두 반환한다. -->
	<select id="commList" parameterType="String" resultType="mybatis.vo.CommVO">
		select *
		from comment_t
		where b_idx = #{b_idx}
	</select>

  <select id="list" parameterType="Map" resultMap="map1">
  	select *
  	from(select rownum r_num, a.*
		  	from(select *
			  	from bbs_t
			  	where status = 0 and bname = #{bname}
			  	order by b_idx desc) a)
	where r_num between #{begin} and #{end}
  </select>
  
  <select id="totalCount" resultType="int" parameterType="String">
  	select count(*)
  	from bbs_t
  	where status = 0 and bname = #{bname}
  </select>
  
  <select id="getBbs" parameterType="Map" resultMap="map1">
  	select *
  	from bbs_t
  	where b_idx = #{b_idx}
  </select>
  
  <insert id="add" parameterType="mybatis.vo.BbsVO">
  	insert into bbs_t(b_idx, subject, writer, content, file_name, ori_name, pwd, write_date,
  						ip, hit, status, bname)
  	VALUES(bbs_t_seq.NEXTVAL, #{subject}, #{writer}, #{content}, #{file_name, jdbcType=VARCHAR }, #{ori_name, jdbcType=VARCHAR}, #{pwd}, sysdate,
  			#{ip}, 0, 0, #{bname})
  </insert>
  
  <update id="fix" parameterType="mybatis.vo.BbsVO">
  	update bbs_t
  	SET subject = #{subject}, content = #{content}, write_date = sysdate
  		<if test="file_name != null">
  			,file_name = #{file_name, jdbcType=VARCHAR}
  			,ori_name = #{ori_name, jdbcType=VARCHAR}
  		</if>
  	where b_idx = #{b_idx} and pwd = #{pwd}
  </update>
  
  <update id="del" parameterType="String">
  	update bbs_t
  	set status = 1
  	where b_idx = #{b_idx}
  </update>
</mapper>